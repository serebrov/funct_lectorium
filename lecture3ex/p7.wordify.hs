module Wordify where
-- —оставить список составл€ющих строку слов

import Char(isSpace)

-- ¬ данном тексте представлены два варианта решени€ задачи разбиени€
-- строки на слова, разделенные "пустыми" символами.
data Flag = Word | NoWord

{- ¬ первом варианте обработка строки ведетс€ справа налево (foldr),
   при этом накапливающийс€ в процессе обработки результат имеет
   вид (inword?, list), где inword? - это флажок, показывающий, был ли
   последний обработанный символ пробелом или нет, а list - накопленный
   к этому моменту список слов (вначале пустой).
   ‘ункци€ обработки очередного символа glue решает, присоединить ли
   очередной символ к слову, начать новое слово или проигнорировать пробел.
 -}
wordify :: String -> [String]
wordify s = snd (foldr glue (NoWord, []) s)
            where glue c (Word, lst@(w:t)) | isSpace c = (NoWord, lst)
                                           | otherwise = (Word, ((c:w):t))
                  glue c (NoWord, lst) | isSpace c = (NoWord, lst)
                                       | otherwise = (Word, [c]:lst)

{- ¬о втором варианте обработка ведетс€ схожим образом, но накапливающийс€
   в процессе обработки результат - это просто список слов. ¬ результате
   обработки может получитьс€ список, в котором первой "слово" будет пустым.
   “акое "слово" удал€етс€ после завершени€ обработки.
 -}                                       
wordify1 :: String -> [String]
wordify1 s = removeEmpty (foldr glue [""] s) where
            glue ' ' list@("":t) = list
            glue ' ' list = "":list
            glue c (w:t) = ((c:w):t)
            removeEmpty ("":list) = list
            removeEmpty list = list